r191 | vajda | 2011-11-14 02:48:28 +0100 (Mo, 14 Nov 2011) | 2 lines
  - fixed bug with default tzinfo set on ICUtzinfo type (bug 13038)
See https://bugzilla.osafoundation.org/show_bug.cgi?id=13038

svn diff -c 191 http://svn.osafoundation.org/pyicu/trunk/
Index: tzinfo.h
===================================================================
--- tzinfo.h	(revision 190)
+++ tzinfo.h	(revision 191)
@@ -24,8 +24,6 @@
 #ifndef _tzinfo_h
 #define _tzinfo_h
 
-extern PyTypeObject TZInfoType;
-
 void _init_tzinfo(PyObject *m);
 
 #endif /* _tzinfo_h */
Index: CHANGES
===================================================================
--- CHANGES	(revision 190)
+++ CHANGES	(revision 191)
@@ -1,6 +1,11 @@
 
 For bug <NUM>, see http://bugzilla.osafoundation.org/show_bug.cgi?id=<NUM>
 
+Version 1.3 ->
+------------------
+  - fixed bug with default tzinfo set on ICUtzinfo type (bug 13038)
+  - 
+
 Version 1.2 -> 1.3
 ------------------
   - fixed bug 13031
Index: common.cpp
===================================================================
--- common.cpp	(revision 190)
+++ common.cpp	(revision 191)
@@ -33,6 +33,7 @@
 
 static PyObject *utcoffset_NAME;
 static PyObject *toordinal_NAME;
+static PyObject *getDefault_NAME;
 
 
 typedef struct {
@@ -355,7 +356,7 @@
                 PyObject *m = PyImport_ImportModule("icu");
                 PyObject *cls = PyObject_GetAttrString(m, "ICUtzinfo");
 
-                tzinfo = PyObject_GetAttrString(cls, "default");
+                tzinfo = PyObject_CallMethodObjArgs(cls, getDefault_NAME, NULL);
                 Py_DECREF(cls);
                 Py_DECREF(m);
 
@@ -1241,4 +1242,5 @@
 
     utcoffset_NAME = PyString_FromString("utcoffset");
     toordinal_NAME = PyString_FromString("toordinal");
+    getDefault_NAME = PyString_FromString("getDefault");
 }
Index: setup.py
===================================================================
--- setup.py	(revision 190)
+++ setup.py	(revision 191)
@@ -25,6 +25,15 @@
     'sunos5': ['-DPYICU_VER="%s"' %(VERSION)],
 }
 
+# added to CFLAGS when setup is invoked with --debug
+DEBUG_CFLAGS = {
+    'darwin': ['-O0', '-g', '-DDEBUG'],
+    'linux': ['-O0', '-g', '-DDEBUG'],
+    'freebsd7': ['-O0', '-g', '-DDEBUG'],
+    'win32': ['/Od', '/DDEBUG'],
+    'sunos5': ['-DDEBUG'],
+}
+
 LFLAGS = {
     'darwin': ['-L/usr/local/lib'],
     'linux': [],
@@ -55,6 +64,12 @@
 else:
     _cflags = CFLAGS[platform]
 
+if '--debug' in sys.argv:
+    if 'PYICU_DEBUG_CFLAGS' in os.environ:
+        _cflags += os.environ['PYICU_DEBUG_CFLAGS'].split(os.pathsep)
+    else:
+        _cflags += DEBUG_CFLAGS[platform]
+
 if 'PYICU_LFLAGS' in os.environ:
     _lflags = os.environ['PYICU_LFLAGS'].split(os.pathsep)
 else:
Index: tzinfo.cpp
===================================================================
--- tzinfo.cpp	(revision 190)
+++ tzinfo.cpp	(revision 191)
@@ -122,7 +122,6 @@
     0,                                  /* tp_setattro */
     0,                                  /* tp_as_buffer */
     (Py_TPFLAGS_DEFAULT |
-     Py_TPFLAGS_HEAPTYPE |
      Py_TPFLAGS_BASETYPE),              /* tp_flags */
     "",                                 /* tp_doc */
     0,                                  /* tp_traverse */
@@ -445,7 +444,6 @@
 
             Py_XDECREF((PyObject *) _default);
             _default = (t_tzinfo *) tzinfo;
-            PyObject_SetAttrString((PyObject *)&TZInfoType, "default", tzinfo);
 
             Py_RETURN_NONE;
         }
@@ -488,7 +486,6 @@
 
     Py_INCREF(arg);
     _default = (t_tzinfo *) arg;
-    PyDict_SetItemString(TZInfoType.tp_dict, "default", arg);
 
     if (prev)
         return prev;
@@ -719,10 +716,7 @@
                 PyObject_Call((PyObject *) &FloatingTZType, args, NULL);
 
             if (floating && PyObject_TypeCheck(floating, &FloatingTZType))
-            {
                 _floating = (t_tzinfo *) floating;
-                PyDict_SetItemString(TZInfoType.tp_dict, "floating", floating);
-            }
             else
                 Py_XDECREF(floating);
             Py_DECREF(args);
